<%--
/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%@ page import="com.liferay.portal.kernel.lar.PortletDataHandlerAsset" %>

<%
List portletsList = (List)request.getAttribute("publish_layouts.jsp-portletsList");
%>

<div>
	<ul class="lfr-tree lfr-component">
		<li class="tree-item">
			<ul id="<portlet:namespace />portletDataList">

			<%
			Set<String> displayedControls = new HashSet<String>();
			Set<String> portletDataHandlerClasses = new HashSet<String>();

			Iterator itr1 = portletsList.iterator();

			while (itr1.hasNext()) {
				Portlet curPortlet = (Portlet)itr1.next();

				String portletDataHandlerClass = curPortlet.getPortletDataHandlerClass();

				if (!portletDataHandlerClasses.contains(portletDataHandlerClass)) {
					portletDataHandlerClasses.add(portletDataHandlerClass);
				}
				else {
					continue;
				}

				PortletDataHandler portletDataHandler = curPortlet.getPortletDataHandlerInstance();

				try {
					PortletDataHandlerControl[] controls = portletDataHandler.getExportControls();

					if (controls != null) {
						String rootPortletId = curPortlet.getRootPortletId();

						for (int i = 0; i < controls.length; i++) {
							if ((controls[i] instanceof PortletDataHandlerAsset) && !displayedControls.contains(controls[i].getNamespacedControlName())) {
								PortletDataHandlerAsset control = (PortletDataHandlerAsset)controls[i];
								PortletDataHandlerControl[] children = control.getChildren();

								displayedControls.add(controls[i].getNamespacedControlName());

								if ((children != null) && (children.length > 0)) {

									request.setAttribute("render_controls.jsp-controls", children);
						%>

									<li class="tree-item">
										<aui:fieldset cssClass="portlet-data-section" label="<%= controls[i].getControlName() %>">

											<ul id="<portlet:namespace /><%= PortletDataHandlerKeys.PORTLET_DATA %>_<%= rootPortletId %>Controls">
												<liferay-util:include page="/html/portlet/layouts_admin/render_controls.jsp" />
											</ul>
										</aui:fieldset>
									</li>
						<%
								}
							}
						}
					}
				}
				catch (PortletDataException pde) {
				%>

					<li class="tree-item">
						<div class="portlet-msg-error">
							<%= PortalUtil.getPortletTitle(curPortlet, application, locale) %>: <%= LanguageUtil.get(pageContext, "error-initializing-import-controls") %>
						</div>
					</li>

			<%
				}
			}
			%>

			</ul>
		</li>
	</ul>
</div>

<aui:script>
	Liferay.Util.toggleRadio('<portlet:namespace />rangeDateRange','<portlet:namespace />startEndDate');
	Liferay.Util.toggleRadio('<portlet:namespace />rangeAll','', ['<portlet:namespace />startEndDate']);
	Liferay.Util.toggleRadio('<portlet:namespace />rangeLastPublish','', ['<portlet:namespace />startEndDate']);
	Liferay.Util.toggleRadio('<portlet:namespace />rangeLast','', ['<portlet:namespace />startEndDate']);

	Liferay.Util.toggleBoxes('<portlet:namespace /><%= PortletDataHandlerKeys.PORTLET_DATA %>Checkbox', '<portlet:namespace />portletDataControls');

	Liferay.Util.toggleBoxes('<portlet:namespace /><%= PortletDataHandlerKeys.PERMISSIONS %>Checkbox', '<portlet:namespace />permissionsUl');
</aui:script>